const passport=require("passport"),funct=require("./functions.js"),LocalStrategy=require("passport-local");function ensureAuthenticated(s,e,o){return o()}passport.serializeUser(function(s,e){console.log("serializing "+s.username),e(null,s)}),passport.deserializeUser(function(s,e){console.log("deserializing "+s),e(null,s)}),passport.use("local-signin",new LocalStrategy({passReqToCallback:!0},function(s,e,o,l){funct.localAuth(e,o).then(function(e){if(e.status){s.user=e.user;let o=e.user;s.session.sessionFlash={type:"success",message:"login success."},console.log("LOGGED IN AS!!!!!!!!!!!: "+o.username),l(null,e.user)}else s.session.sessionFlash={type:"danger",message:e.msg},console.log("COULD NOT LOG IN"),console.log(e),l(null,e.user)}).fail(function(s){console.log(s.body)})})),passport.use("local-signup",new LocalStrategy({passReqToCallback:!0},function(s,e,o,l){try{s.body.password=o,s.body.username=e,funct.localReg(s.body).then(function(e){if(s.result=e,e.status){let o=s.user=e.user;console.log("REGISTERED: "+o.username),s.session.success="You are successfully registered and logged in "+o.username+"!",l(null,e.user)}else console.log(e.msg),l(null,{})}).fail(function(s){console.log(s.body)})}catch(s){throw console.log(s),s}}));