const schedule=require("node-schedule"),rule=new schedule.RecurrenceRule,copydir=require("copy-dir"),rimraf=require("rimraf"),mkdirp=require("mkdirp"),path=require("path"),fs=require("fs-extra");function backupDb(){let e=new schedule.RecurrenceRule;e.dayOfWeek=[0,new schedule.Range(1,6)],e.hour=1,e.minute=30,e.second=0,schedule.scheduleJob(e,function(){let e=new Date,n=e.getFullYear()+("0"+(e.getMonth()+1)).slice(-2)+("0"+e.getDate()).slice(-2),r=path.join(__dirname,"../../backup");console.log("备份文件只保留最近6条数据"),fs.readdir(r,function(e,n){n&&n.filter(function(e){return e.match(/\d+/)}).sort(function(e,n){return e<n?1:-1}).forEach(function(e,n){if(n>5){let n=path.join(r,e);fs.existsSync(n)&&rimraf.sync(n)}})});let i=path.join(r,n);mkdirp.sync(i+"/dbs"),mkdirp.sync(i+"/public"),console.log(path.join(__dirname,"../dbs")),console.log(path.join(__dirname,"../../public")),copydir.sync(path.join(__dirname,"../dbs"),path.join(i,"dbs")),copydir.sync(path.join(__dirname,"../../public"),path.join(i,"public")),console.log(n),console.log("scheduleCronstyle:"+new Date)})}exports.backupDb=backupDb;