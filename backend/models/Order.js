"use strict";const Model=require("./_Base").Model,path=require("path"),_=require("lodash"),fs=require("fs");exports.Order=class e extends Model{static list(e="updatedAt",t="asc"){return Model.list("orders",e,t)}static withUser(e){if(!e)return e;let t=Model.findBy("users",{id:e.userId});return t?(e.company=t.company,e.inspection=e.inspection||{noData:!0},e.installation=e.installation||{noData:!0},e):e}static findBy(t){let r=Model.findBy("orders",t);return r?e.withUser(r):null}static getReations(t){let r=Model.findBy("orders",{id:t}),i=Model.findBy("users",{id:r.userId});return{order:e.withUser(r),user:i,installation:r.installation,inspection:r.inspection}}static findAll(e){return Model.findAll("orders",e)}static findByReg(e){return Model.findByReg("orders",e)}static where(e,t,r){return Model.where("orders",e,t,r)}static format(t,r){return t.map(function(t){return e.withUser(t)})}static formatNum(e){let t=e.toString(),r=_.padStart(t,8,"00");return r.slice(0,4)+"-"+r.slice(4)}static create(t){return t.uuid=Model.guid(),t.orderNum=e.formatNum(Model.size("orders")+1),t.pickTime=new Date,e.withUser(Model.create("orders",t))}static update(t){return e.withUser(Model.update("orders","id",t))}static delete(e){return Model.delete("orders",e)}};